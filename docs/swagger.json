{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/CA": {
            "get": {
                "description": "Retrieve a list of all CAs stored in the in-memory store.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CAs"
                ],
                "summary": "List all Certificate Authorities (CAs)",
                "responses": {
                    "200": {
                        "description": "List of all CAs",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/cert.CaResponse"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new SSH CA and store it in the applications store.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CAs"
                ],
                "summary": "Create a new SSH Certificate Authority (CA)",
                "parameters": [
                    {
                        "description": "New CA",
                        "name": "CA",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cert.CaRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The newly created CA",
                        "schema": {
                            "$ref": "#/definitions/cert.CaResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Could not create CA",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/CA/{id}": {
            "get": {
                "description": "Retrieve a CA by its ID from the applications store.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CAs"
                ],
                "summary": "Get a SSH Certificate Authority (CA) by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CA ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cert.CaResponse"
                        }
                    },
                    "404": {
                        "description": "CA not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/CA/{id}/Sign": {
            "post": {
                "description": "Use the specified CA to sign a provided public key and return the signed key.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CAs"
                ],
                "summary": "Sign a public key with a specific CA",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CA ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Public key to be signed",
                        "name": "public_key",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cert.SignRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The signed public key will be returned under the 'signed_key' field",
                        "schema": {
                            "$ref": "#/definitions/cert.SignResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request or failed to parse public key",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Requested principals not in valid principal list",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to sign public key",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "cert.CaRequest": {
            "type": "object",
            "properties": {
                "bits": {
                    "description": "Key length",
                    "type": "integer"
                },
                "max_ttl_minutes": {
                    "description": "Maximum TTL certs can be signed for",
                    "type": "integer"
                },
                "name": {
                    "description": "Name of CA",
                    "type": "string"
                },
                "type": {
                    "description": "Type of ca, rsa, ed25519",
                    "allOf": [
                        {
                            "$ref": "#/definitions/cert.KeyType"
                        }
                    ]
                },
                "valid_principals": {
                    "description": "List of Valid Principals",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "cert.CaResponse": {
            "type": "object",
            "properties": {
                "bits": {
                    "description": "Key length",
                    "type": "integer"
                },
                "max_ttl_minutess": {
                    "description": "Maximum TTL certs can be signed for",
                    "type": "integer"
                },
                "name": {
                    "description": "Name of CA",
                    "type": "string"
                },
                "public_key": {
                    "description": "CA Public Key",
                    "type": "string"
                },
                "type": {
                    "description": "Type of ca, rsa, ed25519",
                    "allOf": [
                        {
                            "$ref": "#/definitions/cert.KeyType"
                        }
                    ]
                },
                "valid_principals": {
                    "description": "List of Valid Principals",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "cert.KeyType": {
            "type": "string",
            "enum": [
                "rsa",
                "ed25519"
            ],
            "x-enum-varnames": [
                "RSAKey",
                "ED25519"
            ]
        },
        "cert.SignRequest": {
            "type": "object",
            "properties": {
                "principals": {
                    "description": "List of valid principals, usernames",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "public_key": {
                    "description": "Public key material to be signed",
                    "type": "string"
                },
                "ttl_minutes": {
                    "description": "How long the certificate is valid for",
                    "type": "integer"
                }
            }
        },
        "cert.SignResponse": {
            "type": "object",
            "properties": {
                "signed_key": {
                    "description": "Signed certificate by the CA",
                    "type": "string"
                }
            }
        },
        "handlers.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        }
    }
}